// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.zhuoren.qyNews.ui.news.presenter;

import com.zhuoren.qyNews.net.NewsApi;
import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;
import javax.inject.Provider;

public final class ImageBrowsePresenter_Factory implements Factory<ImageBrowsePresenter> {
  private final MembersInjector<ImageBrowsePresenter> imageBrowsePresenterMembersInjector;

  private final Provider<NewsApi> newsApiProvider;

  public ImageBrowsePresenter_Factory(
      MembersInjector<ImageBrowsePresenter> imageBrowsePresenterMembersInjector,
      Provider<NewsApi> newsApiProvider) {
    assert imageBrowsePresenterMembersInjector != null;
    this.imageBrowsePresenterMembersInjector = imageBrowsePresenterMembersInjector;
    assert newsApiProvider != null;
    this.newsApiProvider = newsApiProvider;
  }

  @Override
  public ImageBrowsePresenter get() {
    return MembersInjectors.injectMembers(
        imageBrowsePresenterMembersInjector, new ImageBrowsePresenter(newsApiProvider.get()));
  }

  public static Factory<ImageBrowsePresenter> create(
      MembersInjector<ImageBrowsePresenter> imageBrowsePresenterMembersInjector,
      Provider<NewsApi> newsApiProvider) {
    return new ImageBrowsePresenter_Factory(imageBrowsePresenterMembersInjector, newsApiProvider);
  }
}
